#!/bin/bash
# This is a simple script that research the words in the searching history of StarDict.
#
# The explanations of each word are saved in a file "~/ankifile" in your $HOME, 
# which can be loaded later into anki with an option "Fields separated by: Tab". 
# (when loading "ankifile", remember to check the option "Allow HTML in fields", if your explanations contains html tags)

######## how to install ? ########
# put it in a folder like "~/bin", and make it executable
#   $ chmod +x dict2anki

####### how to use ? #######
# run it without any arguments in terminal
# $ dict2anki
#
# then a file called ~/ankifile is ready to import into Anki

# Note: StarDict creates the history file when it is closed. 
#       Please run dict2anki with StarDict closed.

######## how to change the name/location of the output file ? #########
# check the variable "outputFileName", assign you prefered filename

############ how to add more dicts ? ############
# put a line like the following after the line of "meanings=`sdcv -n \"
#   -u "dict-name" \

########### how to find the above "dict-name" ##############
# dict names can be found by searhing a word mannuly with sdcv in terminal.
#
# Here in the following is the output of sdcv after searching hello by "$ sdcv hello" on my PC.
# It promotes all my dict names, e.g., "XDICT英汉辞典", "Collins COBUILD V3", "我爱法语-英法词典". 
#
# Found 15 items, similar to hello.
# 0)XDICT英汉辞典-->hello
# 1)懒虫简明英汉词典-->hello
# 2)朗道英汉字典5.0-->hello
# 3)Merriam-Webster Collegiate® Dictionary-->hello
# 4)XDICT英汉辞典-->hello
# 5)CMU American English spelling-->hello
# 6)Collins COBUILD V3-->hello
# 7)The CMU Pronouncing Dictionary-->hello
# 8)Longman Dictionary of Contemporary English-->hello
# 9)美国传统词典[双解]-->hello
# 10)stardict1.3英汉辞典-->hello
# 11)Longman Dictionary of Contemporary English (4th Ed)-->hello
# 12)Merrian Webster 10th dictionary-->hello
# 13)我爱法语-法英词典-->hello
# 14)我爱法语-英法词典-->hello
# Your choice[-1 to abort]: 

# (ctrl-c to abort also)

############# here we go #############

outputFileName=~/ankifile

# if there was a ankifile
if [ -f $outputFileName ]
then
    rm $outputFileName
fi

# if there is a searching history file "~/bin/Words-Note/Words-Note.txt"

if [ -f ~/bin/Words-Note/Words-Note.txt ]
then

    while read line
    do
        meanings=`sdcv -n \
            -u "21世纪英汉汉英双向词典" \
            "$line" | sed '/Nothing similar to/d;/Found/d'| awk '{print $0,"<br>"}' | tr '\n' ' '`
    
        if [ -n "$meanings" ]; then
            # the output file is named as "~/ankifile" (in $HOME folder)
            echo -e "<word>$line</word>\t<meanings>$meanings</meanings>"  >> $outputFileName
        fi
    # load searching history from "~/bin/Words-Note/Words-Note.txt"
    done < ~/bin/Words-Note/Words-Note.txt

    echo "Done, all words was saved in $outputFileName"
else
    echo "There is no ~/bin/Words-Note/Words-Note.txt"
fi

################ the end ################
